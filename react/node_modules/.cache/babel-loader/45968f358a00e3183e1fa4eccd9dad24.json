{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Aleksander/Documents/Uczelnia/kiedy-kolos/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Aleksander/Documents/Uczelnia/kiedy-kolos/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Aleksander/Documents/Uczelnia/kiedy-kolos/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState}from\"react\";import{useDispatch}from\"react-redux\";import CallendarCard from\"./CallendarCard\";import AddEventPanel from\"./AddEventPanel\";import\"./../App.css\";import{setDate}from\"../actions\";var Callendar=function Callendar(){var API_URL=\"http://aleksanderblaszkiewicz.pl/kiedykolos/get_events.php\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),events=_useState2[0],setEvents=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),days=_useState4[0],setDays=_useState4[1];var _useState5=useState(12),_useState6=_slicedToArray(_useState5,2),month=_useState6[0],setMonth=_useState6[1];var dispatch=useDispatch();useEffect(function(){initializeDays();getEvents();dispatch(setDate(\"2020-12-01\"));},[]);var getEvents=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(API_URL);case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setEvents(data);console.log(data);case 8:case\"end\":return _context.stop();}}},_callee);}));return function getEvents(){return _ref.apply(this,arguments);};}();var initializeDays=function initializeDays(){var days=new Array(31);for(var i=0;i<31;i++){days[i]=i+1;}setDays(days);};var getEventsForDay=function getEventsForDay(day){var specificEvents=[];events.forEach(function(event){if(event.date.slice(event.date.length-2,event.date.length)==day){specificEvents.push(event);}});return specificEvents;};return/*#__PURE__*/_jsxs(\"div\",{className:\"callendar\",children:[/*#__PURE__*/_jsx(AddEventPanel,{refreshEvents:getEvents}),/*#__PURE__*/_jsx(\"br\",{}),days.map(function(day){return/*#__PURE__*/_jsx(CallendarCard,{day:day,month:month,year:\"2020\",events:getEventsForDay(day)},day);})]});};export default Callendar;","map":{"version":3,"sources":["C:/Users/Aleksander/Documents/Uczelnia/kiedy-kolos/react/src/components/Callendar.js"],"names":["React","useEffect","useState","useDispatch","CallendarCard","AddEventPanel","setDate","Callendar","API_URL","events","setEvents","days","setDays","month","setMonth","dispatch","initializeDays","getEvents","fetch","response","json","data","console","log","Array","i","getEventsForDay","day","specificEvents","forEach","event","date","slice","length","push","map"],"mappings":"kmBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAO,cAAP,CACA,OAASC,OAAT,KAAwB,YAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAMC,CAAAA,OAAO,6DAAb,CADoB,cAEQN,QAAQ,CAAC,EAAD,CAFhB,wCAEbO,MAFa,eAELC,SAFK,8BAGIR,QAAQ,CAAC,EAAD,CAHZ,yCAGbS,IAHa,eAGPC,OAHO,8BAIMV,QAAQ,CAAC,EAAD,CAJd,yCAIbW,KAJa,eAINC,QAJM,eAKpB,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACZe,cAAc,GACdC,SAAS,GACTF,QAAQ,CAACT,OAAO,CAAC,YAAD,CAAR,CAAR,CACH,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMW,CAAAA,SAAS,0FAAG,2KACSC,CAAAA,KAAK,CAACV,OAAD,CADd,QACRW,QADQ,qCAEKA,CAAAA,QAAQ,CAACC,IAAT,EAFL,QAERC,IAFQ,eAGdX,SAAS,CAACW,IAAD,CAAT,CACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAJc,sDAAH,kBAATJ,CAAAA,SAAS,0CAAf,CAOA,GAAMD,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAIL,CAAAA,IAAI,CAAG,GAAIa,CAAAA,KAAJ,CAAU,EAAV,CAAX,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAAC,EAAf,CAAmBA,CAAC,EAApB,CAAwB,CACpBd,IAAI,CAACc,CAAD,CAAJ,CAAUA,CAAC,CAAC,CAAZ,CACH,CACDb,OAAO,CAACD,IAAD,CAAP,CACH,CAND,CAQA,GAAMe,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAS,CAC7B,GAAIC,CAAAA,cAAc,CAAG,EAArB,CACAnB,MAAM,CAACoB,OAAP,CAAe,SAAAC,KAAK,CAAI,CACpB,GAAGA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBF,KAAK,CAACC,IAAN,CAAWE,MAAX,CAAkB,CAAnC,CAAqCH,KAAK,CAACC,IAAN,CAAWE,MAAhD,GAA2DN,GAA9D,CAAmE,CAC/DC,cAAc,CAACM,IAAf,CAAoBJ,KAApB,EACH,CACJ,CAJD,EAKA,MAAOF,CAAAA,cAAP,CACH,CARD,CAUA,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,aAAD,EAAe,aAAa,CAAEX,SAA9B,EADJ,cAEI,aAFJ,CAGKN,IAAI,CAACwB,GAAL,CAAS,SAAAR,GAAG,qBACT,KAAC,aAAD,EAAyB,GAAG,CAAEA,GAA9B,CAAmC,KAAK,CAAEd,KAA1C,CAAiD,IAAI,CAAC,MAAtD,CAA6D,MAAM,CAAEa,eAAe,CAACC,GAAD,CAApF,EAAoBA,GAApB,CADS,EAAZ,CAHL,GADJ,CAUH,CAhDD,CAkDA,cAAepB,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CallendarCard from \"./CallendarCard\";\r\nimport AddEventPanel from \"./AddEventPanel\";\r\nimport \"./../App.css\"\r\nimport { setDate } from \"../actions\";\r\n\r\nconst Callendar = () => {\r\n    const API_URL = `http://aleksanderblaszkiewicz.pl/kiedykolos/get_events.php`;\r\n    const [events, setEvents] = useState([]);\r\n    const [days, setDays] = useState([]);\r\n    const [month, setMonth] = useState(12);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        initializeDays();\r\n        getEvents();\r\n        dispatch(setDate(\"2020-12-01\"));\r\n    }, []);\r\n\r\n    const getEvents = async () => {\r\n        const response = await fetch(API_URL);\r\n        const data = await response.json();\r\n        setEvents(data);\r\n        console.log(data);\r\n    }\r\n\r\n    const initializeDays = () => {\r\n        let days = new Array(31);\r\n        for(let i=0; i<31; i++) {\r\n            days[i] = i+1;\r\n        }\r\n        setDays(days);\r\n    }\r\n\r\n    const getEventsForDay = (day) => {\r\n        let specificEvents = [];\r\n        events.forEach(event => {\r\n            if(event.date.slice(event.date.length-2,event.date.length) == day) {\r\n                specificEvents.push(event);\r\n            }\r\n        });\r\n        return specificEvents;\r\n    }\r\n\r\n    return (\r\n        <div className=\"callendar\">\r\n            <AddEventPanel refreshEvents={getEvents}/>\r\n            <br />\r\n            {days.map(day => (\r\n                <CallendarCard key={day} day={day} month={month} year=\"2020\" events={getEventsForDay(day)}/>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Callendar;"]},"metadata":{},"sourceType":"module"}