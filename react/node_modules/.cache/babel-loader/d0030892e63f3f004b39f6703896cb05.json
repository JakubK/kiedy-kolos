{"ast":null,"code":"/**\n * Expose `Emitter`.\n */\nmodule.exports = Emitter;\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n  return this;\n};\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","map":{"version":3,"sources":["C:/Users/Aleksander/Documents/Uczelnia/SPS/REACT/callendar/node_modules/react-ajax/src/emitter.js"],"names":["module","exports","Emitter","obj","mixin","key","prototype","on","addEventListener","event","fn","_callbacks","push","once","self","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","callbacks","cb","i","splice","emit","args","slice","call","len","listeners","hasListeners"],"mappings":"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","sourcesContent":["/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\nfunction Emitter(obj) {\n    if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n    for (var key in Emitter.prototype) {\n        obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\n    Emitter.prototype.addEventListener = function(event, fn){\n        this._callbacks = this._callbacks || {};\n        (this._callbacks[event] = this._callbacks[event] || [])\n            .push(fn);\n        return this;\n    };\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n    var self = this;\n    this._callbacks = this._callbacks || {};\n\n    function on() {\n        self.off(event, on);\n        fn.apply(this, arguments);\n    }\n\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\n    Emitter.prototype.removeListener =\n        Emitter.prototype.removeAllListeners =\n            Emitter.prototype.removeEventListener = function(event, fn){\n                this._callbacks = this._callbacks || {};\n\n                // all\n                if (0 == arguments.length) {\n                    this._callbacks = {};\n                    return this;\n                }\n\n                // specific event\n                var callbacks = this._callbacks[event];\n                if (!callbacks) return this;\n\n                // remove all handlers\n                if (1 == arguments.length) {\n                    delete this._callbacks[event];\n                    return this;\n                }\n\n                // remove specific handler\n                var cb;\n                for (var i = 0; i < callbacks.length; i++) {\n                    cb = callbacks[i];\n                    if (cb === fn || cb.fn === fn) {\n                        callbacks.splice(i, 1);\n                        break;\n                    }\n                }\n                return this;\n            };\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n    this._callbacks = this._callbacks || {};\n    var args = [].slice.call(arguments, 1)\n        , callbacks = this._callbacks[event];\n\n    if (callbacks) {\n        callbacks = callbacks.slice(0);\n        for (var i = 0, len = callbacks.length; i < len; ++i) {\n            callbacks[i].apply(this, args);\n        }\n    }\n\n    return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n    this._callbacks = this._callbacks || {};\n    return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n    return !! this.listeners(event).length;\n};\n"]},"metadata":{},"sourceType":"script"}