{"version":3,"sources":["components/CallendarCard.js","actions/index.js","components/AddEventPanel.js","components/Callendar.js","components/InfoPanel.js","App.js","reportWebVitals.js","reducers/counter.js","reducers/index.js","index.js"],"names":["CallendarCard","day","month","events","counter","useSelector","state","dispatch","useDispatch","className","onClick","console","log","type","payload","map","event","name","AddEventPanel","refreshEvents","useState","courses","setCourses","setName","date","setDate","useEffect","getCourses","a","fetch","response","json","data","addEvent","id","form","value","onChange","e","target","course","min","max","Callendar","setEvents","days","setDays","initializeDays","getEvents","Array","i","getEventsForDay","specificEvents","forEach","slice","length","push","InfoEvent","title","InfoPanel","API_URL","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","counterReducer","action","allReducers","combineReducers","store","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf82de3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment } from \"./../actions\";\r\nimport './../App.css';\r\n\r\nconst CallendarCard = ({day, month, events}) => {\r\n    const counter = useSelector(state => state.counter);\r\n    const dispatch = useDispatch();\r\n\r\n    const callendarCardClicked = () => {\r\n        console.log(\"Clicked on day: \" + day);\r\n        dispatch(increment(day));\r\n        console.log(\"Counter: \" + counter);\r\n    }\r\n\r\n    return(\r\n        <div className=\"callendar-card\" onClick={callendarCardClicked}>\r\n            <p className=\"title\">2020-{month}-{day} </p>\r\n            {events.map(event => (\r\n                <div key={event.name}>\r\n                    {event.name}<br />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallendarCard;","export const increment = (value) => {\r\n    return {\r\n        type: 'INCREMENT',\r\n        payload: value\r\n    };\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nconst AddEventPanel = ({refreshEvents}) => {\r\n    const API_URL_GET = `http://aleksanderblaszkiewicz.pl/kiedykolos/get_courses.php`;\r\n    const [courses, setCourses] = useState([]);\r\n    const [name, setName] = useState(\"jezyki programowania\");\r\n    const [date, setDate] = useState(\"2020-12-12\");\r\n  \r\n    useEffect(() => {\r\n        getCourses();\r\n    }, []);\r\n\r\n    const getCourses = async () => {\r\n        const response = await fetch(API_URL_GET);\r\n        const data = await response.json();\r\n        setCourses(data);\r\n    }\r\n\r\n    const addEvent = async () => {\r\n        const response = await fetch(`http://aleksanderblaszkiewicz.pl/kiedykolos/add_event.php?name=${name}&date=${date}`);\r\n        refreshEvents();\r\n    }\r\n\r\n    const updateName = e => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const updateDate = e => {\r\n        setDate(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <select name=\"course\" id=\"course\" form=\"add-event\" value={name} onChange={updateName}>\r\n            {courses.map(course => (\r\n                <option key={course.id} value={course.id}>\r\n                    {course.name}\r\n                </option>\r\n            ))}\r\n            </select>\r\n            <input type=\"date\" id=\"date\" name=\"date\" value=\"2020-11-25\" min=\"2020-11-25\" max=\"2021-12-31\" value={date} onChange={updateDate}></input>\r\n            \r\n            <button onClick={addEvent} >click here</button>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEventPanel;","import React, { useEffect, useState } from \"react\";\r\nimport CallendarCard from \"./CallendarCard\";\r\nimport AddEventPanel from \"./AddEventPanel\";\r\nimport \"./../App.css\"\r\n\r\nconst Callendar = () => {\r\n    const API_URL = `http://aleksanderblaszkiewicz.pl/kiedykolos/get_events.php`;\r\n    const [events, setEvents] = useState([]);\r\n    const [days, setDays] = useState([]);\r\n    const [month, setMonth] = useState(11);\r\n\r\n    useEffect(() => {\r\n        initializeDays();\r\n        getEvents();\r\n    }, []);\r\n\r\n    const getEvents = async () => {\r\n        const response = await fetch(API_URL);\r\n        const data = await response.json();\r\n        setEvents(data);\r\n        console.log(data);\r\n    }\r\n\r\n    const initializeDays = () => {\r\n        let days = new Array(31);\r\n        for(let i=0; i<31; i++) {\r\n            days[i] = i+1;\r\n        }\r\n        setDays(days);\r\n    }\r\n\r\n    const getEventsForDay = (day) => {\r\n        let specificEvents = [];\r\n        events.forEach(event => {\r\n            if(event.date.slice(event.date.length-2,event.date.length) == day) {\r\n                specificEvents.push(event);\r\n            }\r\n        });\r\n        return specificEvents;\r\n    }\r\n\r\n    return (\r\n        <div className=\"callendar\">\r\n            <AddEventPanel refreshEvents={getEvents}/>\r\n            <br />\r\n            {days.map(day => (\r\n                <CallendarCard key={day} day={day} month={month} events={getEventsForDay(day)}/>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Callendar;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport './../App.css';\r\n\r\n\r\n\r\nconst InfoPanel = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const date = useSelector(state => state.counter);\r\n    const API_URL = `http://aleksanderblaszkiewicz.pl/kiedykolos/get_events_specific.php?date=2020-12-${date}`;\r\n\r\n    useEffect(() => {\r\n        getEvents();\r\n    }, [date]);\r\n\r\n    const getEvents = async () => {\r\n        const response = await fetch(API_URL);\r\n        const data = await response.json();\r\n        setEvents(data);\r\n    }\r\n\r\n    return(\r\n        <div className=\"info-panel\">\r\n            <p>Wybrana data: 2020-11-{date}</p>\r\n            {events.map((event) => (\r\n                <InfoEvent key={event.name} title={event.name}/>\r\n            ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst InfoEvent = ({title}) => {\r\n    return (\r\n        <div className=\"info-event\">\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoPanel;","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Callendar from \"./components/Callendar\";\nimport InfoPanel from \"./components/InfoPanel\"\n\nconst App = () => {\n    return  (\n        <div className=\"App\">\n            <Callendar />\n            <InfoPanel />\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const counterReducer = (state = 1, action) => {\r\n    switch(action.type) {\r\n        case 'INCREMENT':\r\n            return action.payload\r\n        case 'DECREMENT':\r\n            return state - 1\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import counterReducer from './counter';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    counter: counterReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n    allReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}